~~~ Luca's Jack Analyzer ~~~
argument is: directory
.jack file found: Main.jack
LINE: class Main {
KEYIDENT: class
KEYIDENT: Main
SYMBOL: {
LINE:     function void main() {
KEYIDENT: function
KEYIDENT: void
KEYIDENT: main
SYMBOL: (
SYMBOL: )
SYMBOL: {
LINE:         var Array a;
KEYIDENT: var
KEYIDENT: Array
KEYIDENT: a
SYMBOL: ;
LINE:         var int length;
KEYIDENT: var
KEYIDENT: int
KEYIDENT: length
SYMBOL: ;
LINE:         var int i, sum;
KEYIDENT: var
KEYIDENT: int
KEYIDENT: i
SYMBOL: ,
KEYIDENT: sum
SYMBOL: ;
LINE: let length = Keyboard.readInt("HOW MANY NUMBERS? ");
KEYIDENT: let
KEYIDENT: length
SYMBOL: =
KEYIDENT: Keyboard
SYMBOL: .
KEYIDENT: readInt
SYMBOL: (
STRING: HOW MANY NUMBERS? 
SYMBOL: )
SYMBOL: ;
LINE: let a = Array.new(length);
KEYIDENT: let
KEYIDENT: a
SYMBOL: =
KEYIDENT: Array
SYMBOL: .
KEYIDENT: new
SYMBOL: (
KEYIDENT: length
SYMBOL: )
SYMBOL: ;
LINE: let i = 0;
KEYIDENT: let
KEYIDENT: i
SYMBOL: =
INTEGER: 0
SYMBOL: ;
LINE: while (i < length) {
KEYIDENT: while
SYMBOL: (
KEYIDENT: i
SYMBOL: <
KEYIDENT: length
SYMBOL: )
SYMBOL: {
LINE:     let a[i] = Keyboard.readInt("ENTER THE NEXT NUMBER: ");
KEYIDENT: let
KEYIDENT: a
SYMBOL: [
KEYIDENT: i
SYMBOL: ]
SYMBOL: =
KEYIDENT: Keyboard
SYMBOL: .
KEYIDENT: readInt
SYMBOL: (
STRING: ENTER THE NEXT NUMBER: 
SYMBOL: )
SYMBOL: ;
LINE:     let i = i + 1;
KEYIDENT: let
KEYIDENT: i
SYMBOL: =
KEYIDENT: i
SYMBOL: +
INTEGER: 1
SYMBOL: ;
LINE: }
SYMBOL: }
LINE: let i = 0;
KEYIDENT: let
KEYIDENT: i
SYMBOL: =
INTEGER: 0
SYMBOL: ;
LINE: let sum = 0;
KEYIDENT: let
KEYIDENT: sum
SYMBOL: =
INTEGER: 0
SYMBOL: ;
LINE: while (i < length) {
KEYIDENT: while
SYMBOL: (
KEYIDENT: i
SYMBOL: <
KEYIDENT: length
SYMBOL: )
SYMBOL: {
LINE:     let sum = sum + a[i];
KEYIDENT: let
KEYIDENT: sum
SYMBOL: =
KEYIDENT: sum
SYMBOL: +
KEYIDENT: a
SYMBOL: [
KEYIDENT: i
SYMBOL: ]
SYMBOL: ;
LINE:     let i = i + 1;
KEYIDENT: let
KEYIDENT: i
SYMBOL: =
KEYIDENT: i
SYMBOL: +
INTEGER: 1
SYMBOL: ;
LINE: }
SYMBOL: }
LINE: do Output.printString("THE AVERAGE IS: ");
KEYIDENT: do
KEYIDENT: Output
SYMBOL: .
KEYIDENT: printString
SYMBOL: (
STRING: THE AVERAGE IS: 
SYMBOL: )
SYMBOL: ;
LINE: do Output.printInt(sum / length);
KEYIDENT: do
KEYIDENT: Output
SYMBOL: .
KEYIDENT: printInt
SYMBOL: (
KEYIDENT: sum
SYMBOL: /
KEYIDENT: length
SYMBOL: )
SYMBOL: ;
LINE: do Output.println();
KEYIDENT: do
KEYIDENT: Output
SYMBOL: .
KEYIDENT: println
SYMBOL: (
SYMBOL: )
SYMBOL: ;
LINE: return;
KEYIDENT: return
SYMBOL: ;
LINE:     }
SYMBOL: }
LINE: }
SYMBOL: }
tokenized: Main.jack
created output file: Main.xml
